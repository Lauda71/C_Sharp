<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DB16TestDataSet" targetNamespace="http://tempuri.org/DB16TestDataSet.xsd" xmlns:mstns="http://tempuri.org/DB16TestDataSet.xsd" xmlns="http://tempuri.org/DB16TestDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="DB16TestConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="DB16TestConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Testing.Properties.Settings.GlobalReference.Default.DB16TestConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ResultsTableAdapter" GeneratorDataComponentClassName="ResultsTableAdapter" Name="Results" UserDataComponentName="ResultsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DB16TestConnectionString (Settings)" DbObjectName="DB16Test.dbo.Results" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Results] WHERE (([ID_result] = @Original_ID_result) AND ([ID_student] = @Original_ID_student) AND ([ID_test] = @Original_ID_test) AND ([Date_testing] = @Original_Date_testing) AND ([Mark] = @Original_Mark))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_result" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_result" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_student" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_student" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_test" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_test" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Date_testing" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date_testing" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Mark" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Mark" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Results] ([ID_student], [ID_test], [Date_testing], [Mark]) VALUES (@ID_student, @ID_test, @Date_testing, @Mark);
SELECT ID_result, ID_student, ID_test, Date_testing, Mark FROM Results WHERE (ID_result = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID_student" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_student" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID_test" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_test" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Date_testing" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date_testing" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Mark" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Mark" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID_result, ID_student, ID_test, Date_testing, Mark FROM dbo.Results</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Results] SET [ID_student] = @ID_student, [ID_test] = @ID_test, [Date_testing] = @Date_testing, [Mark] = @Mark WHERE (([ID_result] = @Original_ID_result) AND ([ID_student] = @Original_ID_student) AND ([ID_test] = @Original_ID_test) AND ([Date_testing] = @Original_Date_testing) AND ([Mark] = @Original_Mark));
SELECT ID_result, ID_student, ID_test, Date_testing, Mark FROM Results WHERE (ID_result = @ID_result)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID_student" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_student" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID_test" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_test" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Date_testing" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date_testing" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Mark" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Mark" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_result" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_result" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_student" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_student" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_test" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_test" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Date_testing" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date_testing" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Mark" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Mark" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_result" ColumnName="ID_result" DataSourceName="DB16Test.dbo.Results" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_result" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_result" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_result" DataSetColumn="ID_result" />
              <Mapping SourceColumn="ID_student" DataSetColumn="ID_student" />
              <Mapping SourceColumn="ID_test" DataSetColumn="ID_test" />
              <Mapping SourceColumn="Date_testing" DataSetColumn="Date_testing" />
              <Mapping SourceColumn="Mark" DataSetColumn="Mark" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentsTableAdapter" GeneratorDataComponentClassName="StudentsTableAdapter" Name="Students" UserDataComponentName="StudentsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DB16TestConnectionString (Settings)" DbObjectName="DB16Test.dbo.Students" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Students] WHERE (([ID_student] = @Original_ID_student) AND ([ID_team] = @Original_ID_team))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_student" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_student" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_team" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_team" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Students] ([Name_student], [ID_team]) VALUES (@Name_student, @ID_team);
SELECT ID_student, Name_student, ID_team FROM Students WHERE (ID_student = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name_student" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name_student" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID_team" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_team" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID_student, Name_student, ID_team FROM dbo.Students</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Students] SET [Name_student] = @Name_student, [ID_team] = @ID_team WHERE (([ID_student] = @Original_ID_student) AND ([ID_team] = @Original_ID_team));
SELECT ID_student, Name_student, ID_team FROM Students WHERE (ID_student = @ID_student)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name_student" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name_student" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID_team" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_team" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_student" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_student" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_team" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_team" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_student" ColumnName="ID_student" DataSourceName="DB16Test.dbo.Students" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_student" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_student" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_student" DataSetColumn="ID_student" />
              <Mapping SourceColumn="Name_student" DataSetColumn="Name_student" />
              <Mapping SourceColumn="ID_team" DataSetColumn="ID_team" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TeachersTableAdapter" GeneratorDataComponentClassName="TeachersTableAdapter" Name="Teachers" UserDataComponentName="TeachersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DB16TestConnectionString (Settings)" DbObjectName="DB16Test.dbo.Teachers" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Teachers] WHERE (([ID_Teacher] = @Original_ID_Teacher) AND ([Login] = @Original_Login) AND ([Password] = @Original_Password) AND ([Name_teacher] = @Original_Name_teacher))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Teacher" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Teacher" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Login" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name_teacher" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name_teacher" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Teachers] ([Login], [Password], [Name_teacher]) VALUES (@Login, @Password, @Name_teacher);
SELECT ID_Teacher, Login, Password, Name_teacher FROM Teachers WHERE (ID_Teacher = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Login" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name_teacher" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name_teacher" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID_Teacher, Login, Password, Name_teacher FROM dbo.Teachers</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Teachers] SET [Login] = @Login, [Password] = @Password, [Name_teacher] = @Name_teacher WHERE (([ID_Teacher] = @Original_ID_Teacher) AND ([Login] = @Original_Login) AND ([Password] = @Original_Password) AND ([Name_teacher] = @Original_Name_teacher));
SELECT ID_Teacher, Login, Password, Name_teacher FROM Teachers WHERE (ID_Teacher = @ID_Teacher)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Login" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name_teacher" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name_teacher" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Teacher" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Teacher" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Login" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name_teacher" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name_teacher" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_Teacher" ColumnName="ID_Teacher" DataSourceName="DB16Test.dbo.Teachers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_Teacher" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Teacher" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_Teacher" DataSetColumn="ID_Teacher" />
              <Mapping SourceColumn="Login" DataSetColumn="Login" />
              <Mapping SourceColumn="Password" DataSetColumn="Password" />
              <Mapping SourceColumn="Name_teacher" DataSetColumn="Name_teacher" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TeamsTableAdapter" GeneratorDataComponentClassName="TeamsTableAdapter" Name="Teams" UserDataComponentName="TeamsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DB16TestConnectionString (Settings)" DbObjectName="DB16Test.dbo.Teams" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Teams] WHERE (([ID_team] = @Original_ID_team) AND ([Team] = @Original_Team))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_team" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_team" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Team" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Team" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Teams] ([Team]) VALUES (@Team);
SELECT ID_team, Team FROM Teams WHERE (ID_team = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Team" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Team" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID_team, Team FROM dbo.Teams</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Teams] SET [Team] = @Team WHERE (([ID_team] = @Original_ID_team) AND ([Team] = @Original_Team));
SELECT ID_team, Team FROM Teams WHERE (ID_team = @ID_team)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Team" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Team" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_team" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_team" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Team" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Team" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_team" ColumnName="ID_team" DataSourceName="DB16Test.dbo.Teams" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_team" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_team" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_team" DataSetColumn="ID_team" />
              <Mapping SourceColumn="Team" DataSetColumn="Team" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TestsTableAdapter" GeneratorDataComponentClassName="TestsTableAdapter" Name="Tests" UserDataComponentName="TestsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DB16TestConnectionString (Settings)" DbObjectName="DB16Test.dbo.Tests" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Tests] WHERE (([ID_test] = @Original_ID_test) AND ([ID_teacher] = @Original_ID_teacher) AND ([Name_test] = @Original_Name_test) AND ([Date_create] = @Original_Date_create) AND ([Test_topic] = @Original_Test_topic) AND ([Time_limit] = @Original_Time_limit) AND ([Try_limit] = @Original_Try_limit) AND ([Test_return_limit] = @Original_Test_return_limit))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_test" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_test" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_teacher" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_teacher" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name_test" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name_test" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Date_create" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date_create" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Test_topic" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Test_topic" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Time_limit" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Time_limit" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Try_limit" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Try_limit" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Test_return_limit" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Test_return_limit" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Tests] ([ID_teacher], [Name_test], [Date_create], [Test_topic], [Comment], [Time_limit], [Try_limit], [Test_return_limit]) VALUES (@ID_teacher, @Name_test, @Date_create, @Test_topic, @Comment, @Time_limit, @Try_limit, @Test_return_limit);
SELECT ID_test, ID_teacher, Name_test, Date_create, Test_topic, Comment, Time_limit, Try_limit, Test_return_limit FROM Tests WHERE (ID_test = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID_teacher" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_teacher" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name_test" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name_test" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Date_create" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date_create" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Test_topic" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Test_topic" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Comment" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Comment" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Time_limit" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Time_limit" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Try_limit" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Try_limit" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Test_return_limit" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Test_return_limit" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID_test, ID_teacher, Name_test, Date_create, Test_topic, Comment, Time_limit, Try_limit, Test_return_limit FROM dbo.Tests</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Tests] SET [ID_teacher] = @ID_teacher, [Name_test] = @Name_test, [Date_create] = @Date_create, [Test_topic] = @Test_topic, [Comment] = @Comment, [Time_limit] = @Time_limit, [Try_limit] = @Try_limit, [Test_return_limit] = @Test_return_limit WHERE (([ID_test] = @Original_ID_test) AND ([ID_teacher] = @Original_ID_teacher) AND ([Name_test] = @Original_Name_test) AND ([Date_create] = @Original_Date_create) AND ([Test_topic] = @Original_Test_topic) AND ([Time_limit] = @Original_Time_limit) AND ([Try_limit] = @Original_Try_limit) AND ([Test_return_limit] = @Original_Test_return_limit));
SELECT ID_test, ID_teacher, Name_test, Date_create, Test_topic, Comment, Time_limit, Try_limit, Test_return_limit FROM Tests WHERE (ID_test = @ID_test)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID_teacher" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_teacher" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name_test" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name_test" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Date_create" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date_create" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Test_topic" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Test_topic" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Comment" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Comment" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Time_limit" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Time_limit" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Try_limit" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Try_limit" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Test_return_limit" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Test_return_limit" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_test" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_test" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_teacher" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_teacher" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name_test" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name_test" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Date_create" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date_create" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Test_topic" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Test_topic" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Time_limit" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Time_limit" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Try_limit" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Try_limit" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Test_return_limit" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Test_return_limit" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_test" ColumnName="ID_test" DataSourceName="DB16Test.dbo.Tests" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_test" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_test" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_test" DataSetColumn="ID_test" />
              <Mapping SourceColumn="ID_teacher" DataSetColumn="ID_teacher" />
              <Mapping SourceColumn="Name_test" DataSetColumn="Name_test" />
              <Mapping SourceColumn="Date_create" DataSetColumn="Date_create" />
              <Mapping SourceColumn="Test_topic" DataSetColumn="Test_topic" />
              <Mapping SourceColumn="Comment" DataSetColumn="Comment" />
              <Mapping SourceColumn="Time_limit" DataSetColumn="Time_limit" />
              <Mapping SourceColumn="Try_limit" DataSetColumn="Try_limit" />
              <Mapping SourceColumn="Test_return_limit" DataSetColumn="Test_return_limit" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StatTableAdapter" GeneratorDataComponentClassName="StatTableAdapter" Name="Stat" UserDataComponentName="StatTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DB16TestConnectionString (Settings)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetDataIdTeacher" GetMethodModifier="Public" GetMethodName="GetDataIdTeacher" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetDataIdTeacher" UserSourceName="GetDataIdTeacher">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        Tests.Name_test, Tests.Test_topic, Tests.Comment, Results.ID_student, Results.ID_test, Results.Date_testing, Results.Mark, Students.Name_student, Teams.Team, Students.ID_team
FROM            Results INNER JOIN
                         Students ON Results.ID_student = Students.ID_student INNER JOIN
                         Teams ON Students.ID_team = Teams.ID_team INNER JOIN
                         Tests ON Results.ID_test = Tests.ID_test
WHERE        (Tests.ID_teacher = @idt)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="idt" ColumnName="ID_teacher" DataSourceName="DB16Test.dbo.Tests" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idt" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_teacher" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Name_test" DataSetColumn="Name_test" />
              <Mapping SourceColumn="Test_topic" DataSetColumn="Test_topic" />
              <Mapping SourceColumn="Comment" DataSetColumn="Comment" />
              <Mapping SourceColumn="ID_student" DataSetColumn="ID_student" />
              <Mapping SourceColumn="ID_test" DataSetColumn="ID_test" />
              <Mapping SourceColumn="Date_testing" DataSetColumn="Date_testing" />
              <Mapping SourceColumn="Mark" DataSetColumn="Mark" />
              <Mapping SourceColumn="Name_student" DataSetColumn="Name_student" />
              <Mapping SourceColumn="Team" DataSetColumn="Team" />
              <Mapping SourceColumn="ID_team" DataSetColumn="ID_team" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="DB16TestConnectionString (Settings)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataGroup" GetMethodModifier="Public" GetMethodName="GetDataGroup" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataGroup" UserSourceName="GetDataGroup">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        Tests.Name_test, Tests.Test_topic, Tests.Comment, Results.ID_student, Results.ID_test, Results.Date_testing, Results.Mark, Students.Name_student, Teams.Team, Students.ID_team
FROM            Results INNER JOIN
                         Students ON Results.ID_student = Students.ID_student INNER JOIN
                         Teams ON Students.ID_team = Teams.ID_team INNER JOIN
                         Tests ON Results.ID_test = Tests.ID_test
WHERE        (Tests.ID_teacher = @idt) AND (Teams.Team = @team)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="idt" ColumnName="ID_teacher" DataSourceName="DB16Test.dbo.Tests" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idt" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_teacher" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="team" ColumnName="Team" DataSourceName="DB16Test.dbo.Teams" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@team" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Team" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DB16TestConnectionString (Settings)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataMark" GetMethodModifier="Public" GetMethodName="GetDataMark" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataMark" UserSourceName="GetDataMark">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        Tests.Name_test, Tests.Test_topic, Tests.Comment, Results.ID_student, Results.ID_test, Results.Date_testing, Results.Mark, Students.Name_student, Teams.Team, Students.ID_team
FROM            Results INNER JOIN
                         Students ON Results.ID_student = Students.ID_student INNER JOIN
                         Teams ON Students.ID_team = Teams.ID_team INNER JOIN
                         Tests ON Results.ID_test = Tests.ID_test
WHERE        (Tests.ID_teacher = @idt) AND (Results.Mark = @mark)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="idt" ColumnName="ID_teacher" DataSourceName="DB16Test.dbo.Tests" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idt" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_teacher" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="mark" ColumnName="Mark" DataSourceName="DB16Test.dbo.Results" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@mark" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Mark" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DB16TestConnectionString (Settings)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataMarkTeam" GetMethodModifier="Public" GetMethodName="GetDataMarkTeam" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataMarkTeam" UserSourceName="GetDataMarkTeam">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        Tests.Name_test, Tests.Test_topic, Tests.Comment, Results.ID_student, Results.ID_test, Results.Date_testing, Results.Mark, Students.Name_student, Teams.Team, Students.ID_team
FROM            Results INNER JOIN
                         Students ON Results.ID_student = Students.ID_student INNER JOIN
                         Teams ON Students.ID_team = Teams.ID_team INNER JOIN
                         Tests ON Results.ID_test = Tests.ID_test
WHERE        (Tests.ID_teacher = @idt) AND (Results.Mark = @mark) AND (Teams.Team = @team)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="idt" ColumnName="ID_teacher" DataSourceName="DB16Test.dbo.Tests" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idt" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_teacher" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="mark" ColumnName="Mark" DataSourceName="DB16Test.dbo.Results" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@mark" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Mark" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="team" ColumnName="Team" DataSourceName="DB16Test.dbo.Teams" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@team" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Team" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DB16TestConnectionString (Settings)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataTestMark" GetMethodModifier="Public" GetMethodName="GetDataTestMark" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataTestMark" UserSourceName="GetDataTestMark">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        Tests.Name_test, Tests.Test_topic, Tests.Comment, Results.ID_student, Results.ID_test, Results.Date_testing, Results.Mark, Students.Name_student, Teams.Team, Students.ID_team
FROM            Results INNER JOIN
                         Students ON Results.ID_student = Students.ID_student INNER JOIN
                         Teams ON Students.ID_team = Teams.ID_team INNER JOIN
                         Tests ON Results.ID_test = Tests.ID_test
WHERE        (Tests.ID_teacher = @idt) AND (Tests.Name_test = @testname) AND (Results.Mark = @mark)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="idt" ColumnName="ID_teacher" DataSourceName="DB16Test.dbo.Tests" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idt" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_teacher" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="testname" ColumnName="Name_test" DataSourceName="DB16Test.dbo.Tests" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@testname" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="Name_test" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="mark" ColumnName="Mark" DataSourceName="DB16Test.dbo.Results" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@mark" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Mark" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DB16TestConnectionString (Settings)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataTestName" GetMethodModifier="Public" GetMethodName="GetDataTestName" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataTestName" UserSourceName="GetDataTestName">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        Tests.Name_test, Tests.Test_topic, Tests.Comment, Results.ID_student, Results.ID_test, Results.Date_testing, Results.Mark, Students.Name_student, Teams.Team, Students.ID_team
FROM            Results INNER JOIN
                         Students ON Results.ID_student = Students.ID_student INNER JOIN
                         Teams ON Students.ID_team = Teams.ID_team INNER JOIN
                         Tests ON Results.ID_test = Tests.ID_test
WHERE        (Tests.ID_teacher = @idt) AND (Tests.Name_test = @testname)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="idt" ColumnName="ID_teacher" DataSourceName="DB16Test.dbo.Tests" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idt" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_teacher" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="testname" ColumnName="Name_test" DataSourceName="DB16Test.dbo.Tests" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@testname" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="Name_test" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DB16TestConnectionString (Settings)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataTestTeam" GetMethodModifier="Public" GetMethodName="GetDataTestTeam" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataTestTeam" UserSourceName="GetDataTestTeam">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        Tests.Name_test, Tests.Test_topic, Tests.Comment, Results.ID_student, Results.ID_test, Results.Date_testing, Results.Mark, Students.Name_student, Teams.Team, Students.ID_team
FROM            Results INNER JOIN
                         Students ON Results.ID_student = Students.ID_student INNER JOIN
                         Teams ON Students.ID_team = Teams.ID_team INNER JOIN
                         Tests ON Results.ID_test = Tests.ID_test
WHERE        (Tests.ID_teacher = @idt) AND (Tests.Name_test = @testname) AND (Teams.Team = @team)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="idt" ColumnName="ID_teacher" DataSourceName="DB16Test.dbo.Tests" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idt" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_teacher" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="testname" ColumnName="Name_test" DataSourceName="DB16Test.dbo.Tests" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@testname" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="Name_test" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="team" ColumnName="Team" DataSourceName="DB16Test.dbo.Teams" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@team" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Team" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DB16TestConnectionString (Settings)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetOverHere" GetMethodModifier="Public" GetMethodName="GetOverHere" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetOverHere" UserSourceName="GetOverHere">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        Tests.Name_test, Tests.Test_topic, Tests.Comment, Results.ID_student, Results.ID_test, Results.Date_testing, Results.Mark, Students.Name_student, Teams.Team, Students.ID_team
FROM            Results INNER JOIN
                         Students ON Results.ID_student = Students.ID_student INNER JOIN
                         Teams ON Students.ID_team = Teams.ID_team INNER JOIN
                         Tests ON Results.ID_test = Tests.ID_test
WHERE        (Tests.ID_teacher = @idt) AND (Tests.Name_test = @testname) AND (Results.Mark = @mark) AND (Teams.Team = @team)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="idt" ColumnName="ID_teacher" DataSourceName="DB16Test.dbo.Tests" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idt" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_teacher" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="testname" ColumnName="Name_test" DataSourceName="DB16Test.dbo.Tests" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@testname" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="Name_test" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="mark" ColumnName="Mark" DataSourceName="DB16Test.dbo.Results" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@mark" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Mark" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="team" ColumnName="Team" DataSourceName="DB16Test.dbo.Teams" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@team" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Team" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DB16TestDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="DB16TestDataSet" msprop:Generator_UserDSName="DB16TestDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Results" msprop:Generator_TableClassName="ResultsDataTable" msprop:Generator_TableVarName="tableResults" msprop:Generator_TablePropName="Results" msprop:Generator_RowDeletingName="ResultsRowDeleting" msprop:Generator_RowChangingName="ResultsRowChanging" msprop:Generator_RowEvHandlerName="ResultsRowChangeEventHandler" msprop:Generator_RowDeletedName="ResultsRowDeleted" msprop:Generator_UserTableName="Results" msprop:Generator_RowChangedName="ResultsRowChanged" msprop:Generator_RowEvArgName="ResultsRowChangeEvent" msprop:Generator_RowClassName="ResultsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_result" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnID_result" msprop:Generator_ColumnPropNameInRow="ID_result" msprop:Generator_ColumnPropNameInTable="ID_resultColumn" msprop:Generator_UserColumnName="ID_result" type="xs:int" />
              <xs:element name="ID_student" msprop:Generator_ColumnVarNameInTable="columnID_student" msprop:Generator_ColumnPropNameInRow="ID_student" msprop:Generator_ColumnPropNameInTable="ID_studentColumn" msprop:Generator_UserColumnName="ID_student" type="xs:int" />
              <xs:element name="ID_test" msprop:Generator_ColumnVarNameInTable="columnID_test" msprop:Generator_ColumnPropNameInRow="ID_test" msprop:Generator_ColumnPropNameInTable="ID_testColumn" msprop:Generator_UserColumnName="ID_test" type="xs:int" />
              <xs:element name="Date_testing" msprop:Generator_ColumnVarNameInTable="columnDate_testing" msprop:Generator_ColumnPropNameInRow="Date_testing" msprop:Generator_ColumnPropNameInTable="Date_testingColumn" msprop:Generator_UserColumnName="Date_testing" type="xs:dateTime" />
              <xs:element name="Mark" msprop:Generator_ColumnVarNameInTable="columnMark" msprop:Generator_ColumnPropNameInRow="Mark" msprop:Generator_ColumnPropNameInTable="MarkColumn" msprop:Generator_UserColumnName="Mark" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Students" msprop:Generator_TableClassName="StudentsDataTable" msprop:Generator_TableVarName="tableStudents" msprop:Generator_TablePropName="Students" msprop:Generator_RowDeletingName="StudentsRowDeleting" msprop:Generator_RowChangingName="StudentsRowChanging" msprop:Generator_RowEvHandlerName="StudentsRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentsRowDeleted" msprop:Generator_UserTableName="Students" msprop:Generator_RowChangedName="StudentsRowChanged" msprop:Generator_RowEvArgName="StudentsRowChangeEvent" msprop:Generator_RowClassName="StudentsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_student" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnID_student" msprop:Generator_ColumnPropNameInRow="ID_student" msprop:Generator_ColumnPropNameInTable="ID_studentColumn" msprop:Generator_UserColumnName="ID_student" type="xs:int" />
              <xs:element name="Name_student" msprop:Generator_ColumnVarNameInTable="columnName_student" msprop:Generator_ColumnPropNameInRow="Name_student" msprop:Generator_ColumnPropNameInTable="Name_studentColumn" msprop:Generator_UserColumnName="Name_student">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ID_team" msprop:Generator_ColumnVarNameInTable="columnID_team" msprop:Generator_ColumnPropNameInRow="ID_team" msprop:Generator_ColumnPropNameInTable="ID_teamColumn" msprop:Generator_UserColumnName="ID_team" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Teachers" msprop:Generator_TableClassName="TeachersDataTable" msprop:Generator_TableVarName="tableTeachers" msprop:Generator_TablePropName="Teachers" msprop:Generator_RowDeletingName="TeachersRowDeleting" msprop:Generator_RowChangingName="TeachersRowChanging" msprop:Generator_RowEvHandlerName="TeachersRowChangeEventHandler" msprop:Generator_RowDeletedName="TeachersRowDeleted" msprop:Generator_UserTableName="Teachers" msprop:Generator_RowChangedName="TeachersRowChanged" msprop:Generator_RowEvArgName="TeachersRowChangeEvent" msprop:Generator_RowClassName="TeachersRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_Teacher" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnID_Teacher" msprop:Generator_ColumnPropNameInRow="ID_Teacher" msprop:Generator_ColumnPropNameInTable="ID_TeacherColumn" msprop:Generator_UserColumnName="ID_Teacher" type="xs:int" />
              <xs:element name="Login" msprop:Generator_ColumnVarNameInTable="columnLogin" msprop:Generator_ColumnPropNameInRow="Login" msprop:Generator_ColumnPropNameInTable="LoginColumn" msprop:Generator_UserColumnName="Login">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Password" msprop:Generator_ColumnVarNameInTable="columnPassword" msprop:Generator_ColumnPropNameInRow="Password" msprop:Generator_ColumnPropNameInTable="PasswordColumn" msprop:Generator_UserColumnName="Password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Name_teacher" msprop:Generator_ColumnVarNameInTable="columnName_teacher" msprop:Generator_ColumnPropNameInRow="Name_teacher" msprop:Generator_ColumnPropNameInTable="Name_teacherColumn" msprop:Generator_UserColumnName="Name_teacher">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Teams" msprop:Generator_TableClassName="TeamsDataTable" msprop:Generator_TableVarName="tableTeams" msprop:Generator_TablePropName="Teams" msprop:Generator_RowDeletingName="TeamsRowDeleting" msprop:Generator_RowChangingName="TeamsRowChanging" msprop:Generator_RowEvHandlerName="TeamsRowChangeEventHandler" msprop:Generator_RowDeletedName="TeamsRowDeleted" msprop:Generator_UserTableName="Teams" msprop:Generator_RowChangedName="TeamsRowChanged" msprop:Generator_RowEvArgName="TeamsRowChangeEvent" msprop:Generator_RowClassName="TeamsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_team" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnID_team" msprop:Generator_ColumnPropNameInRow="ID_team" msprop:Generator_ColumnPropNameInTable="ID_teamColumn" msprop:Generator_UserColumnName="ID_team" type="xs:int" />
              <xs:element name="Team" msprop:Generator_ColumnVarNameInTable="columnTeam" msprop:Generator_ColumnPropNameInRow="Team" msprop:Generator_ColumnPropNameInTable="TeamColumn" msprop:Generator_UserColumnName="Team" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Tests" msprop:Generator_TableClassName="TestsDataTable" msprop:Generator_TableVarName="tableTests" msprop:Generator_TablePropName="Tests" msprop:Generator_RowDeletingName="TestsRowDeleting" msprop:Generator_RowChangingName="TestsRowChanging" msprop:Generator_RowEvHandlerName="TestsRowChangeEventHandler" msprop:Generator_RowDeletedName="TestsRowDeleted" msprop:Generator_UserTableName="Tests" msprop:Generator_RowChangedName="TestsRowChanged" msprop:Generator_RowEvArgName="TestsRowChangeEvent" msprop:Generator_RowClassName="TestsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_test" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnID_test" msprop:Generator_ColumnPropNameInRow="ID_test" msprop:Generator_ColumnPropNameInTable="ID_testColumn" msprop:Generator_UserColumnName="ID_test" type="xs:int" />
              <xs:element name="ID_teacher" msprop:Generator_ColumnVarNameInTable="columnID_teacher" msprop:Generator_ColumnPropNameInRow="ID_teacher" msprop:Generator_ColumnPropNameInTable="ID_teacherColumn" msprop:Generator_UserColumnName="ID_teacher" type="xs:int" />
              <xs:element name="Name_test" msprop:Generator_ColumnVarNameInTable="columnName_test" msprop:Generator_ColumnPropNameInRow="Name_test" msprop:Generator_ColumnPropNameInTable="Name_testColumn" msprop:Generator_UserColumnName="Name_test">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Date_create" msprop:Generator_ColumnVarNameInTable="columnDate_create" msprop:Generator_ColumnPropNameInRow="Date_create" msprop:Generator_ColumnPropNameInTable="Date_createColumn" msprop:Generator_UserColumnName="Date_create" type="xs:dateTime" />
              <xs:element name="Test_topic" msprop:Generator_ColumnVarNameInTable="columnTest_topic" msprop:Generator_ColumnPropNameInRow="Test_topic" msprop:Generator_ColumnPropNameInTable="Test_topicColumn" msprop:Generator_UserColumnName="Test_topic">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Comment" msprop:Generator_ColumnVarNameInTable="columnComment" msprop:Generator_ColumnPropNameInRow="Comment" msprop:Generator_ColumnPropNameInTable="CommentColumn" msprop:Generator_UserColumnName="Comment" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Time_limit" msprop:Generator_ColumnVarNameInTable="columnTime_limit" msprop:Generator_ColumnPropNameInRow="Time_limit" msprop:Generator_ColumnPropNameInTable="Time_limitColumn" msprop:Generator_UserColumnName="Time_limit">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Try_limit" msprop:Generator_ColumnVarNameInTable="columnTry_limit" msprop:Generator_ColumnPropNameInRow="Try_limit" msprop:Generator_ColumnPropNameInTable="Try_limitColumn" msprop:Generator_UserColumnName="Try_limit">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Test_return_limit" msprop:Generator_ColumnVarNameInTable="columnTest_return_limit" msprop:Generator_ColumnPropNameInRow="Test_return_limit" msprop:Generator_ColumnPropNameInTable="Test_return_limitColumn" msprop:Generator_UserColumnName="Test_return_limit">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Stat" msprop:Generator_TableClassName="StatDataTable" msprop:Generator_TableVarName="tableStat" msprop:Generator_TablePropName="Stat" msprop:Generator_RowDeletingName="StatRowDeleting" msprop:Generator_RowChangingName="StatRowChanging" msprop:Generator_RowEvHandlerName="StatRowChangeEventHandler" msprop:Generator_RowDeletedName="StatRowDeleted" msprop:Generator_UserTableName="Stat" msprop:Generator_RowChangedName="StatRowChanged" msprop:Generator_RowEvArgName="StatRowChangeEvent" msprop:Generator_RowClassName="StatRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Name_test" msprop:Generator_ColumnVarNameInTable="columnName_test" msprop:Generator_ColumnPropNameInRow="Name_test" msprop:Generator_ColumnPropNameInTable="Name_testColumn" msprop:Generator_UserColumnName="Name_test">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Test_topic" msprop:Generator_ColumnVarNameInTable="columnTest_topic" msprop:Generator_ColumnPropNameInRow="Test_topic" msprop:Generator_ColumnPropNameInTable="Test_topicColumn" msprop:Generator_UserColumnName="Test_topic">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Comment" msprop:Generator_ColumnVarNameInTable="columnComment" msprop:Generator_ColumnPropNameInRow="Comment" msprop:Generator_ColumnPropNameInTable="CommentColumn" msprop:Generator_UserColumnName="Comment" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ID_student" msprop:Generator_ColumnVarNameInTable="columnID_student" msprop:Generator_ColumnPropNameInRow="ID_student" msprop:Generator_ColumnPropNameInTable="ID_studentColumn" msprop:Generator_UserColumnName="ID_student" type="xs:int" />
              <xs:element name="ID_test" msprop:Generator_ColumnVarNameInTable="columnID_test" msprop:Generator_ColumnPropNameInRow="ID_test" msprop:Generator_ColumnPropNameInTable="ID_testColumn" msprop:Generator_UserColumnName="ID_test" type="xs:int" />
              <xs:element name="Date_testing" msprop:Generator_ColumnVarNameInTable="columnDate_testing" msprop:Generator_ColumnPropNameInRow="Date_testing" msprop:Generator_ColumnPropNameInTable="Date_testingColumn" msprop:Generator_UserColumnName="Date_testing" type="xs:dateTime" />
              <xs:element name="Mark" msprop:Generator_ColumnVarNameInTable="columnMark" msprop:Generator_ColumnPropNameInRow="Mark" msprop:Generator_ColumnPropNameInTable="MarkColumn" msprop:Generator_UserColumnName="Mark" type="xs:int" />
              <xs:element name="Name_student" msprop:Generator_ColumnVarNameInTable="columnName_student" msprop:Generator_ColumnPropNameInRow="Name_student" msprop:Generator_ColumnPropNameInTable="Name_studentColumn" msprop:Generator_UserColumnName="Name_student">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Team" msprop:Generator_ColumnVarNameInTable="columnTeam" msprop:Generator_ColumnPropNameInRow="Team" msprop:Generator_ColumnPropNameInTable="TeamColumn" msprop:Generator_UserColumnName="Team" type="xs:int" />
              <xs:element name="ID_team" msprop:Generator_ColumnVarNameInTable="columnID_team" msprop:Generator_ColumnPropNameInRow="ID_team" msprop:Generator_ColumnPropNameInTable="ID_teamColumn" msprop:Generator_UserColumnName="ID_team" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Results" />
      <xs:field xpath="mstns:ID_result" />
    </xs:unique>
    <xs:unique name="Students_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Students" />
      <xs:field xpath="mstns:ID_student" />
    </xs:unique>
    <xs:unique name="Teachers_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Teachers" />
      <xs:field xpath="mstns:ID_Teacher" />
    </xs:unique>
    <xs:unique name="Teams_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Teams" />
      <xs:field xpath="mstns:ID_team" />
    </xs:unique>
    <xs:unique name="Tests_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Tests" />
      <xs:field xpath="mstns:ID_test" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Results_Students" msdata:parent="Students" msdata:child="Results" msdata:parentkey="ID_student" msdata:childkey="ID_student" msprop:Generator_UserChildTable="Results" msprop:Generator_ChildPropName="GetResultsRows" msprop:Generator_UserRelationName="FK_Results_Students" msprop:Generator_RelationVarName="relationFK_Results_Students" msprop:Generator_UserParentTable="Students" msprop:Generator_ParentPropName="StudentsRow" />
      <msdata:Relationship name="FK_Results_Tests" msdata:parent="Tests" msdata:child="Results" msdata:parentkey="ID_test" msdata:childkey="ID_test" msprop:Generator_UserChildTable="Results" msprop:Generator_ChildPropName="GetResultsRows" msprop:Generator_UserRelationName="FK_Results_Tests" msprop:Generator_RelationVarName="relationFK_Results_Tests" msprop:Generator_UserParentTable="Tests" msprop:Generator_ParentPropName="TestsRow" />
      <msdata:Relationship name="FK_Students_Teams" msdata:parent="Teams" msdata:child="Students" msdata:parentkey="ID_team" msdata:childkey="ID_team" msprop:Generator_UserChildTable="Students" msprop:Generator_ChildPropName="GetStudentsRows" msprop:Generator_UserRelationName="FK_Students_Teams" msprop:Generator_RelationVarName="relationFK_Students_Teams" msprop:Generator_UserParentTable="Teams" msprop:Generator_ParentPropName="TeamsRow" />
      <msdata:Relationship name="FK_Tests_Teachers" msdata:parent="Teachers" msdata:child="Tests" msdata:parentkey="ID_Teacher" msdata:childkey="ID_teacher" msprop:Generator_UserChildTable="Tests" msprop:Generator_ChildPropName="GetTestsRows" msprop:Generator_UserRelationName="FK_Tests_Teachers" msprop:Generator_ParentPropName="TeachersRow" msprop:Generator_RelationVarName="relationFK_Tests_Teachers" msprop:Generator_UserParentTable="Teachers" />
      <msdata:Relationship name="FK_Results_Tests1" msdata:parent="Tests" msdata:child="Stat" msdata:parentkey="ID_test" msdata:childkey="ID_test" msprop:Generator_UserChildTable="Stat" msprop:Generator_ChildPropName="GetStatRows" msprop:Generator_UserRelationName="FK_Results_Tests1" msprop:Generator_ParentPropName="TestsRow" msprop:Generator_RelationVarName="relationFK_Results_Tests1" msprop:Generator_UserParentTable="Tests" />
      <msdata:Relationship name="FK_Results_Students1" msdata:parent="Students" msdata:child="Stat" msdata:parentkey="ID_student" msdata:childkey="ID_student" msprop:Generator_UserChildTable="Stat" msprop:Generator_ChildPropName="GetStatRows" msprop:Generator_UserRelationName="FK_Results_Students1" msprop:Generator_ParentPropName="StudentsRow" msprop:Generator_RelationVarName="relationFK_Results_Students1" msprop:Generator_UserParentTable="Students" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>